name: Version Increment

on:
  push:
    branches:
      - main  # Ensure this matches your default branchnnnn name
      
permissions:
  contents: write  # Grants write permission to the GITHUB_TOKEN
  
jobs:
  increment-version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.x'  # Adjust to your .NET versionn
    - name: Check PAT
      run: echo "PAT is ${{ secrets.ACTIONS_PAT }}"

    - name: Increment version
      run: |
        file="ConsoleApp1CICD/Properties/AssemblyInfo.cs" # Update path to reflect your project structure
        
        # Extract current version (only first match)
        version=$(grep -oP '(?<=\[assembly: AssemblyVersion\(")[^"]+' $file )
        echo "Current version: $version"
        
        if [[ "$version" == *"*"* ]]; then
          # Handle cases where version contains '*'
          echo "Version contains wildcard '*', updating only the patch number."
          
          # Extract the current version excluding the wildcard
          base_version=$(echo "$version" | sed 's/\*//')
          IFS='.' read -r major minor patch <<< "$base_version"
          
          # Increment the patch version
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
        else
          # Handle cases where version is in full format
          IFS='.' read -r major minor patch <<< "$version"
          
          # Increment the patch version
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
        fi
        
        echo "New version: $new_version"
        
        # Replace the version in AssemblyInfo.cs
        sed -i "s/\[assembly: AssemblyVersion(\"$version\")\]/\[assembly: AssemblyVersion(\"$new_version\")\]/g" $file
        sed -i "s/\[assembly: AssemblyFileVersion(\"$version\")\]/\[assembly: AssemblyFileVersion(\"$new_version\")\]/g" $file
        
        # Verify changes
        echo "Updated file content:"
        cat $file

    - name: Commit and push changes
      env:
        PAT: ${{ secrets.ACTIONS_PAT }}  # Use your PAT stored in repository secrets
      run: |
        git config user.name "ahtesham-haq"
        git config user.email "ahtesham.ul.haq@healthwaresystems.com"
        git add .
        git commit -m "Incremented version to $new_version" || echo "No changes to commit"
        git push origin main
